{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81cec668-1b7a-4208-bcfe-672099209e2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import streamlit as st\n",
    "\n",
    "# Load the CSV file\n",
    "file_path = 'cleaned_crash_data.csv'  # Update this path as needed\n",
    "df = pd.read_csv(file_path)\n",
    "\n",
    "# Convert date columns to datetime for analysis\n",
    "df['start_time'] = pd.to_datetime(df['start_time'])\n",
    "df['end_time'] = pd.to_datetime(df['end_time'])\n",
    "\n",
    "# Extract time components\n",
    "df['Year'] = df['start_time'].dt.year\n",
    "df['Month'] = df['start_time'].dt.month\n",
    "df['Day'] = df['start_time'].dt.day\n",
    "df['Hour'] = df['start_time'].dt.hour\n",
    "df['Weekday'] = df['start_time'].dt.day_name()\n",
    "\n",
    "# Define a function to classify season based on month\n",
    "def get_season(month):\n",
    "    if month in [12, 1, 2]:\n",
    "        return 'Winter'\n",
    "    elif month in [3, 4, 5]:\n",
    "        return 'Spring'\n",
    "    elif month in [6, 7, 8]:\n",
    "        return 'Summer'\n",
    "    else:\n",
    "        return 'Autumn'\n",
    "\n",
    "df['Season'] = df['Month'].apply(get_season)\n",
    "\n",
    "# Streamlit App\n",
    "st.title(\"US Accident Data Analysis\")\n",
    "\n",
    "# State selection\n",
    "state_list = sorted(df['state'].dropna().unique())\n",
    "selected_state = st.selectbox(\"Select a State\", state_list)\n",
    "\n",
    "# City selection based on state\n",
    "filtered_df = df[df['state'] == selected_state]\n",
    "city_list = sorted(filtered_df['city'].dropna().unique())\n",
    "selected_city = st.selectbox(\"Select a City\", city_list)\n",
    "\n",
    "# Filtered data for selected city\n",
    "city_data = filtered_df[filtered_df['city'] == selected_city]\n",
    "\n",
    "st.subheader(f\"Analytics for {selected_city}, {selected_state}\")\n",
    "\n",
    "# Day of the week analysis\n",
    "weekday_counts = city_data['Weekday'].value_counts().reset_index()\n",
    "weekday_counts.columns = ['Weekday', 'count']\n",
    "st.bar_chart(data=weekday_counts, x='Weekday', y='count', use_container_width=True)\n",
    "\n",
    "# Hour of the day analysis\n",
    "hourly_counts = city_data['Hour'].value_counts().sort_index().reset_index()\n",
    "hourly_counts.columns = ['Hour', 'count']\n",
    "st.line_chart(data=hourly_counts, x='Hour', y='count', use_container_width=True)\n",
    "\n",
    "# Street-level analysis\n",
    "if 'street' in city_data.columns:\n",
    "    top_streets = city_data['street'].value_counts().head(10).reset_index()\n",
    "    top_streets.columns = ['Street', 'count']\n",
    "    st.write(\"Top 10 Streets with Most Accidents\")\n",
    "    st.bar_chart(data=top_streets, x='Street', y='count', use_container_width=True)\n",
    "\n",
    "# Yearly trend\n",
    "yearly_summary = city_data.groupby('Year').size().reset_index(name='Accident_Count')\n",
    "st.line_chart(data=yearly_summary, x='Year', y='Accident_Count', use_container_width=True)\n",
    "\n",
    "# Monthly trend\n",
    "monthly_summary = city_data.groupby('Month').size().reset_index(name='Accident_Count')\n",
    "st.line_chart(data=monthly_summary, x='Month', y='Accident_Count', use_container_width=True)\n",
    "\n",
    "# Seasonal trend\n",
    "seasonal_summary = city_data['Season'].value_counts().reset_index()\n",
    "seasonal_summary.columns = ['Season', 'count']\n",
    "st.bar_chart(data=seasonal_summary, x='Season', y='count', use_container_width=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
